package templates

import (
"github.com/sentientbottleofwine/osmium/teamserver"
"strconv"
"time"
)

templ AgentsView(agents []teamserver.AgentView) {
<div id="Agents" class="basis-[50svw] dashboard-element flex flex-col">
    <div id="agent-dummy" hx-ext="sse" sse-connect="/api/agents/register/listen" sse-swap="agent" hx-swap="none"></div>
    <div id="agent-updated-dummy" hx-ext="sse" sse-connect="/api/agents/callbackTime/listen" sse-swap="agent"
        hx-swap="none"></div>
    <h2 class="dashboard-element-header">Agents</h2>
    <div class="grow rounded-md m-1 border-2 border-zinc-500 bg-neutral-900 flex flex-col">
        <div class="ml-1 grid grid-cols-5 gap-2">
            <h4 class="text-indigo-500 font-medium">Agent Id</h4>
            <h4 class="text-indigo-500 font-medium">Hostname</h4>
            <h4 class="text-indigo-500 font-medium">Username</h4>
            <h4 class="text-indigo-500 font-medium">Last callback</h4>
        </div>
        <div id="agent-table-body"
            class="grow overflow-auto rounded-md border-t-2 border-zinc-500 min-h-0 bg-neutral-950/90">
            if len(agents) == 0 {
            <h5 class="text-color-neutral-500/10 italic">No agents registered yet...</h5>
            }
            for _, agent := range agents {
            @agentEntry(agent)
            }
        </div>
        <div class="grow bg-neutral-950/90"></div>
    </div>
</div>
}

templ agentEntry(agent teamserver.AgentView) {
if agent.AgentId % 2 == 1 {
// Could make this a separate func but this has better locality of behaviour in terms of grid cols
<div id={ "agent-" + strconv.FormatUint(agent.AgentId, 10) }
    class="agent grid grid-cols-5 gap-2 justify-between p-2 bg-neutral-950/90">
    <p>{ strconv.FormatUint(agent.AgentId, 10) }</p>
    <p>{ agent.AgentInfo.Hostname }</p>
    <p>{ agent.AgentInfo.Username }</p>
    if agent.AgentInfo.LastCallback.Unix() == 0 {
    <p>-</p>
    } else {
    <p>{ agent.AgentInfo.LastCallback.Format(time.DateTime) }</p>
    }
</div>
} else {
<div id={ "agent-" + strconv.FormatUint(agent.AgentId, 10) }
    class="agent grid grid-cols-5 gap-2 justify-between p-2 bg-neutral-900">
    <p>{ strconv.FormatUint(agent.AgentId, 10) }</p>
    <p>{ agent.AgentInfo.Hostname }</p>
    <p>{ agent.AgentInfo.Username }</p>
    if agent.AgentInfo.LastCallback.Unix() == 0 {
    <p>-</p>
    } else {
    <p>{ agent.AgentInfo.LastCallback.Format(time.DateTime) }</p>
    }
</div>
}
<button
    class="agent-reveal-on-hover bg-neutral-950 active:bg-neutral-600 border-1 border-neutral-600 px-2 mr-1 rounded-md text-sm"
    onclick={ templ.JSFuncCall("termInit", agent.AgentId) }>
    Choose agent
</button>
}

templ AgentOOB(agent teamserver.AgentView) {
<div hx-swap-oob="beforeend:#agent-table-body">
    @agentEntry(agent)
</div>
}

templ UpdatedAgentOOB(agent teamserver.AgentView) {
<div id={ "agent-" + strconv.FormatUint(agent.AgentId, 10) } hx-swap-oob="true">
    @agentEntry(agent)
</div>
}
